Use cWebView.pkg
Use cWebPanel.pkg
Use cWebForm.pkg 
Use cWebGrid.pkg
Use cWebColumn.pkg

Use citemDataDictionary.dd
Use clocationDataDictionary.dd
Use cWebButton.pkg
Use locationWebLookup.wo
Use ItemModal.wo
Use cWebColumnButton.pkg
Use cWebVoice.pkg

Object oItemOverview is a cWebView
    Set piWidth to 700
    Set psCaption to "ItemOverview"

    // Your DDO structure will go here
    Object oLocation_DD is a clocationDataDictionary
    End_Object
    
    Object oItem_DD is a citemDataDictionary
        Set DDO_Server to oLocation_DD
        
        Procedure OnConstrain
            String sName sCategory sLocation sFrom sTo sTranscript sFilter sFilterTMP
            String[] asTranscript
            Integer iItems iCnt iAddedWords
            
            WebGet psValue of oSearchItem to sName
            WebGet psValue of oSearchCategory to sCategory
            WebGet psValue of oSearchLocation to sLocation
            WebGet psValue of oSearchFrom to sFrom
            WebGet psValue of oSearchTo to sTo
            WebGet psValue of oWebVoiceSearch to sTranscript
            
            If (sName <> "") Begin
                //Constrain Item.name ge sName
                Get SQLStrLike (RefTable(Item.Name)) sName to sFilter
                Get SQLStrAppend sFilterTMP sFilter to sFilter
            End
            If (sCategory <> "") Begin
                //Constrain Item.Category eq sCategory
                Get SQLStrLike (RefTable(Item.Category)) sCategory to sFilterTMP
                Get SQLStrAppend sFilterTMP sFilter to sFilter
            End
            If (sLocation <> "") Begin
//                Clear location
//                Move sLocation to location.Name
//                Find GE location by Index.2
//                If (Found and ((Trim(sLocation)) = (trim(location.Name)) )) Begin
//                    Constrain Item.Location_Id eq (Integer(location.ID))
//                End
//                Get SQLStrLike (RefTable(Item.Location_Id)) location.ID to sFilterTMP
//                Get SQLStrAppend sFilterTMP sFilter to sFilter
                Move ("Exists (SELECT id FROM location WHERE location.id=item.location_id AND location.Name LIKE '%" + sLocation + "%')") to sFilterTMP
                Get SQLStrAppend sFilterTMP sFilter to sFilter
            End
            
            If (sFrom <> "") Begin
                //Constrain Item.ExpirationDate ge (Date(sFrom))
                Get DateToSQLDate (Date(sFrom)) to sFrom
                Move ("Item.ExpirationDate >= '" + sFrom + "'") to sFilterTMP
                Get SQLStrAppend sFilterTMP sFilter to sFilter
            End
            If (sTo <> "") Begin
                //Constrain Item.ExpirationDate le (Date(sTo))
                Get DateToSQLDate (Date(sTo)) to sTo
                Move ("Item.ExpirationDate <= '" + sTo + "'") to sFilterTMP
                Get SQLStrAppend sFilterTMP sFilter to sFilter
            End
            
            If (sTranscript <> "") Begin
                Move (StrSplitToArray(sTranscript, " ")) to asTranscript
                Move (SizeOfArray(asTranscript)) to iItems
                Move 0 to iCnt
                Move 0 to iAddedWords
                Move ("(") to sFilterTMP
                For iCnt from 0 to (iItems-1)
                    If ((Length(asTranscript[iCnt]) > 2)) Begin
                        If (sFilterTMP <> "(") Move (sFilterTMP + " OR ") to sFilterTMP
                        Move (sFilterTMP + " Item.Name LIKE '%" + asTranscript[iCnt] + "%' ") to sFilterTMP
                        Increment iAddedWords
                    End
                Loop
                Move (sFilterTMP + ") ") to sFilterTMP

                If (iAddedWords > 0) Get SQLStrAppend sFilterTMP sFilter to sFilter
            End
            
            If (sFilter <> "") Begin
                Set psSQLFilter to sFilter
                Set pbUseDDSQLFilters to True
            End
            Else Begin
               Set pbUseDDSQLFilters to False 
            End

        End_Procedure
        
        Function DateToSQLDate Date dDFDate Returns String
            String sSQLDate
            Integer iOrgDateFmt
            Integer iOrgDateSep
            
            //*** Change date format to military, SQL dates are military dates
            Get_Attribute DF_DATE_FORMAT to iOrgDateFmt
            Get_Attribute DF_DATE_SEPARATOR to iOrgDateSep
            Set_Attribute DF_DATE_FORMAT to DF_DATE_MILITARY
            Set_Attribute DF_DATE_SEPARATOR to (Ascii('-'))
            
            Move dDFDate to sSQLDate
            
            //*** Change date format back to original
            Set_Attribute DF_DATE_FORMAT to iOrgDateFmt
            Set_Attribute DF_DATE_SEPARATOR to iOrgDateSep
            
            Function_Return sSQLDate
        End_Function
    End_Object    
    
    Set Main_DD to oItem_DD
    Set Server to oItem_DD

    Handle hoLocationLookup
    Move olocationWebLookup to hoLocationLookup
    
    Object oWebMainPanel is a cWebPanel
        Set piColumnCount to 12

        Object oSearchItem is a cWebForm
            Set piColumnSpan to 3
            Set psLabel to "Item"
            Set peLabelPosition to lpTop
        End_Object
        
        Object oSearchCategory is a cWebCombo
            Set piColumnSpan to 3
            Set psLabel to "Category"
            Set piColumnIndex to 3
            Set peLabelPosition to lpTop
            //Set pbAddEmptyItem to True
            
            Procedure OnFill
                Forward Send OnFill
                String sCat
                
                Send AddComboItem "" "Select"
                Move "" to sCat
                Clear Item
                Find gt Item by 3
                While (Found)
                    If (sCat <> Item.Category) Begin
                        Send AddComboItem Item.Category Item.Category
                    End
                    Move Item.Category to sCat
                    Find gt Item by 3
                Loop
                
            End_Procedure

        End_Object
        
        Object oSearchLocation is a cWebForm
            Set piColumnSpan to 2
            Set psLabel to "Location"
            Set piColumnIndex to 6
            Set peLabelPosition to lpTop
            Set pbPromptButton to True
            Set phoPrompt to hoLocationLookup

            Procedure OnPrompt
                Forward Send OnPrompt
            End_Procedure
            
            WebPublishProcedure PromptUpdateCallback 
            Procedure PromptUpdateCallback Handle hoPrompt
            End_Procedure

            Procedure Prompt_Callback Handle hoPrompt
                WebSet psPromptUpdateCallback of hoPrompt to "PromptUpdateCallback"
                WebSet peUpdateMode of hoPrompt to umPromptValue
            End_Procedure

        End_Object
        
        Object oSearchFrom is a cWebDateForm
            Set piColumnSpan to 2
            Set psLabel to "From"
            Set peLabelPosition to lpTop
            Set piColumnIndex to 8
        End_Object
        
        Object oSearchTo is a cWebDateForm
            Set piColumnSpan to 2
            Set psLabel to "To"
            Set piColumnIndex to 10
            Set peLabelPosition to lpTop
        End_Object

        Object oWebVoice1 is a cWebVoice
            Set piColumnSpan to 2
            Set psCaption to "VOICE"
            
            Procedure OnResponse String sTranscript
                Handle hoColumn
                String sResult
                //WebSet psValue of oSearchItem to sTranscript
                WebSet psValue of oWebVoiceSearch to sTranscript
                Send Search
                
                Get GetColumnObject of oWebGrid1 3 to hoColumn
                If (hoColumn) Begin
                    WebGet psValue of hoColumn to sResult
                    If ((Trim(sResult)) = "") Begin
                        Send Speak "Sorry, not found. Try again."
                    End
                    Else Begin
                        Send Speak ("Found in the " + sResult)
                    End
                End
            End_Procedure
        End_Object

        Object oWebVoiceSearch is a cWebForm
            Set piColumnSpan to 8
            Set psLabel to "form"
            Set piColumnIndex to 2
            Set pbShowLabel to False
        End_Object

        Object oWebButtonSearch is a cWebButton
            Set piColumnSpan to 2
            Set psCaption to "Search"
            Set piColumnIndex to 10
        
            Procedure OnClick
                WebSet psValue of oWebVoiceSearch to ""
                Send Search
            End_Procedure
        End_Object
        
        

        Object oWebGrid1 is a cWebList
            Set pbServerOnRowClick to True
            
            Object oWebColumnName is a cWebColumn
                Entry_Item Item.Name
                Set psCaption to "Item"
                Set piWidth to 50
                
                Procedure OnDefineCssClass String ByRef sCSSClass
                    If (Item.ExpirationDate < (CurrentDateTime())) Begin
                        Move "outdated" to sCSSClass
                    End
                End_Procedure
            End_Object
            
            Object oWebColumnCategory is a cWebColumn
                Entry_Item Item.Category
                Set psCaption to "Category"
                Set piWidth to 50

                Procedure OnDefineCssClass String ByRef sCSSClass
                    If (Item.ExpirationDate < (CurrentDateTime())) Begin
                        Move "outdated" to sCSSClass
                    End
                End_Procedure
            End_Object
            
            Object oWebColumnExpiration is a cWebColumn
                Entry_Item Item.ExpirationDate
                Set psCaption to "Exp. Date"
                Set piWidth to 50

                Procedure OnDefineCssClass String ByRef sCSSClass
                    If (Item.ExpirationDate < (CurrentDateTime())) Begin
                        Move "outdated" to sCSSClass
                    End
                End_Procedure
            End_Object
                    
            Object oWebColumnLocation is a cWebColumn
                Entry_Item location.Name
                Set psCaption to "Location"
                Set piWidth to 50

                Procedure OnDefineCssClass String ByRef sCSSClass
                    If (Item.ExpirationDate < (CurrentDateTime())) Begin
                        Move "outdated" to sCSSClass
                    End
                End_Procedure
            End_Object
            
            Procedure OnRowClick String sRowID
                Forward Send OnRowClick sRowID
                
                Send FindByRowId of oItem_DD (RefTable(Item)) (DeserializeRowID(sRowID))
                
                Send Popup of oItemModal Self Item.ID
            End_Procedure
            
            Procedure OnCloseModalDialog Handle hoModalDialog
                Send Search
            End_Procedure

            Object oWebColumnDeleteBtn is a cWebColumnButton
                Set psCaption to "Del"
                Set psButtonCaption to ""
                Set psBtnCssClass to "WebButtonIcon WebIcon_Delete"
                Set piWidth to 20
                
                WebPublishProcedure DeleteItem
                Procedure DeleteItem Integer eConfirmMode
                    If (eConfirmMode=cmYes) Begin
                        Send Request_Delete of oItem_DD
                        Send Search of oItemOverview
                    End
                End_Procedure
                
                Procedure OnClick String sButton String sRowId
                    Forward Send OnClick sButton sRowId
                    
                    Send ShowYesNo (Self) (RefProc(DeleteItem)) "Are you sure you want to delete this item?" "Delete item"
                End_Procedure
            End_Object
        End_Object
        
    End_Object
    
    WebPublishProcedure Search
    Procedure Search
        Send Rebuild_Constraints of oItem_DD
        Send FindDDRecordInBuffer of oWebGrid1
    End_Procedure
    
    Procedure OnLoad
        Send Find of oItem_DD FIRST_RECORD 1
        Send AddKeyHandler (RefProc(Search)) 13 False False False
    End_Procedure

    
End_Object
